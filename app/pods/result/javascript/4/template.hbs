<html>
  <head>
    <meta charset="utf-8">
    <title>Javascript exercise 4</title>
    <link href="/webkit.css" rel="stylesheet">
  </head>
  <body>
    <button type="button" onClick="makeSandwich()" name="button">Make sandwich</button>
    <div id="result"></div>
    <img id="sandwich" src="http://www.zerowasteweek.co.uk/wp-content/uploads/2014/04/sandwich.jpg" style="display:none" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>
    <script type="text/javascript">
    // File: js-example4.js

    // This is a one line comment
    /*
        This is a multiple
        line comment
     */

    // 1. Different types of variables
    var typeOfBread = 'white bread';
    var numberOfSalamiSlices = 2;
    var butter = true;

    // 2. Adding variable with a number.
    var totalSlices = numberOfSalamiSlices + 2;
    var stringAddition = 'this will ' + 'be an awesome ' + 'sandwich';

    // 3. Alert data to the user
    // alert('totalSlices: ' + totalSlices);

    // 4. The following is a simple function.
    function cutBread(){
      // 5. The alert, is actually a javascript built-in function!
      alert('Cutting ' +typeOfBread);
    }

    // 6. Functions can become more generic by passing in an input
    function useButter(spread){
      // 7. "if" statements allow you to add logic!
      // e.g. if it's raining, take a coat with you!
      if(spread === true){
        alert('Spreading butter');
      }else{
        alert('Not spreading butter');
      }
    }

    function eat(){
      // 8. display something in HTML using the document.getElementById("id").innerHTML
      $("#result").html("nom nom nom");
    }

    function showSandwich(){
      // 9. Change something on an HTML element, using the setAttribute()
      $("#sandwich").attr('style','');
    }

    // 10. Call functions inside functions!
    function makeSandwich(){
      cutBread();
      useButter(false);
      showSandwich();
      eat();
    }
    </script>
  </body>
</html>
